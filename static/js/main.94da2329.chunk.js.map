{"version":3,"sources":["store/osm/actionTypes.js","store/osm/reducer.js","store/reducers.js","services/OSM.js","App.js","store/osm/actions.js","index.js"],"names":["OSM_REVERSE_GEO","initialState","Immutable","osm","undefined","getGetGeoLocation","state","location","rootReducer","combineReducers","arguments","length","action","type","types","merge","router","routerReducer","services_OSM","lat","long","fetch","then","response","json","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetchContacts","bind","assertThisInitialized","params","URLSearchParams","window","search","activePanel","fetchedUser","email","pieces","accessDeclined","address","baseAddress","platform","get","_this2","vkConnect","subscribe","e","detail","userInfo","data","geoInfo","country","title","city","setState","phone","phone_number","addressContact","name","specified_address","geo","available","dispatch","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","getState","wrap","_context","prev","next","OSM","reverseLocation","sent","t0","console","error","stop","_x","_x2","apply","log","send","connect","_this3","react_default","createElement","vkui","id","description","style","color","before","size","src","top","min","step","max","value","Number","onChange","display","flexGrow","textAlign","defaultValue","first_name","last_name","event","target","onClick","placeholder","display_name","React","Component","osmSelectors","history","createHashHistory","hashType","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","routerMiddleware","ReactDOM","render","react_redux_es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.94da2329.chunk.js","sourcesContent":["export const OSM_REVERSE_GEO = 'osm.reverseGeo';\n","import Immutable from 'seamless-immutable';\nimport * as types from './actionTypes';\n\nconst initialState = Immutable({\n    osm: undefined,\n});\n\nexport default function reduce(state = initialState, action = {}) {\n    switch (action.type) {\n        case types.OSM_REVERSE_GEO:\n            return state.merge({\n                location: action.location\n            });\n        default:\n            return state;\n    }\n}\n\nexport function getGetGeoLocation(state) {\n    return state.osm.location;\n}\n","import {routerReducer} from 'react-router-redux';\nimport {combineReducers} from 'redux';\nimport osm from './osm/reducer';\n\nexport const rootReducer = combineReducers({\n    osm: osm,\n    router: routerReducer,\n});\n","class OSM {\n    async reverseLocation(lat, long) {\n        return fetch('https://nominatim.openstreetmap.org/reverse?format=json&lat=' + lat + '&lon=' + long + '&zoom=18&addressdetails=1').then(function (response) {\n            return response.json();\n        })\n    }\n}\n\nexport default new OSM();\n","import React from 'react';\nimport vkConnect from '@vkontakte/vkui-connect';\nimport {connect} from 'react-redux';\nimport {\n    ANDROID,\n    Avatar,\n    Button,\n    Cell,\n    Checkbox,\n    Div,\n    FormLayout,\n    FormLayoutGroup,\n    Group,\n    Input,\n    IOS,\n    Link,\n    ListItem,\n    Panel,\n    PanelHeader,\n    platform,\n    Radio,\n    Select,\n    Slider,\n    Textarea,\n    View\n} from '@vkontakte/vkui';\n\nimport * as osmSelectors from './store/osm/reducer';\nimport * as osmActions from './store/osm/actions';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fetchContacts = this.fetchContacts.bind(this);\n\n        const params = new URLSearchParams(window.location.search);\n\n        this.state = {\n            activePanel: 'home',\n            fetchedUser: null,\n            email: '',\n            pieces: 1,\n            accessDeclined: false,\n            address: '',\n            baseAddress: '',\n            location: null,\n            platform: params.get('vk_platform'),\n        };\n    }\n\n    componentDidMount() {\n        vkConnect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppGetUserInfoResult':\n                    let userInfo = e.detail.data;\n                    let geoInfo = '';\n                    if (userInfo.country) {\n                        geoInfo = userInfo.country.title;\n                    }\n\n                    if (userInfo.city) {\n                        geoInfo += ', ' + userInfo.city.title;\n                    }\n\n                    this.setState({fetchedUser: userInfo, baseAddress: geoInfo, address: geoInfo});\n                    break;\n                case 'VKWebAppGetEmailResult':\n                    this.setState({email: e.detail.data.email});\n                    break;\n                case 'VKWebAppGetPhoneNumberResult':\n                    this.setState({phone: e.detail.data.phone_number});\n                    break;\n                case 'VKWebAppGetPersonalCardResult':\n                    let addressContact = e.detail.data.address;\n                    this.setState({\n                        phone: e.detail.data.phone,\n                        email: e.detail.data.email,\n                        address: addressContact.country.name + ', ' + addressContact.city.name + ', ' + addressContact.specified_address\n                    });\n                    break;\n\n                case 'VKWebAppGeodataResult':\n                    let geo = e.detail.data;\n                    if (geo.available) {\n                        this.props.dispatch(osmActions.fetchLocation(geo.lat, geo.long));\n                    }\n\n                    break;\n                case 'VKWebAppGetPersonalCardFailed':\n                case 'VKWebAppSetViewSettingsFailed': // a iOS's bug\n                    this.setState({\n                        accessDeclined: true\n                    });\n                    break;\n                default:\n                    console.log(e.detail.type);\n            }\n        });\n        vkConnect.send('VKWebAppGetUserInfo', {});\n    }\n\n    fetchContacts(type) {\n        if (this.state.platform === 'mobile_android' || this.state.platform === 'mobile_iphone') {\n            if (!this.state.accessDeclined) {\n                connect.send('VKWebAppGetPersonalCard', {\"type\": [\"phone\", \"email\", \"address\"]});\n            }\n        } else {\n            switch (type) {\n                case 'address':\n                    if (this.props.location === undefined) {\n                        vkConnect.send('VKWebAppGetGeodata', {});\n                    }\n                    break;\n\n                case 'email':\n                    vkConnect.send('VKWebAppGetEmail', {});\n                    break;\n\n                case 'phone':\n                    vkConnect.send('VKWebAppGetPhoneNumber', {});\n                    break;\n            }\n        }\n    }\n\n    render() {\n        let fetchedUser = this.state.fetchedUser;\n        let email = this.state.email;\n        let phone = this.state.phone;\n        let address = this.state.address;\n        let baseAddress = this.state.baseAddress;\n        let location = this.props.location;\n\n        return (\n            <View activePanel=\"main\">\n                <Panel id=\"main\">\n                    <PanelHeader>Order</PanelHeader>\n                    <Group title=\"Order detail\">\n                        <Cell\n                            description={<div><span style={{color: \"#000\"}}>US 125.3$</span><span> / piece</span></div>}\n                            before={<Avatar type=\"app\" size={80}\n                                            src=\"https://i1.proskater.ru/images/b2images/1220/23082018-7644-007_1.jpg\"/>}>\n                            Gant Apollo Blue\n                        </Cell>\n                    </Group>\n\n                    <Group title=\"Pieces\">\n                        <Div>\n                            <Slider\n                                top={this.state.pieces}\n                                min={1}\n                                step={1}\n                                max={10}\n                                value={Number(this.state.pieces)}\n                                onChange={value => this.setState({pieces: value})}\n                            />\n                        </Div>\n                        <Div style={{display: 'flex'}}>\n                            <Div style={{color: \"#909499\", flexGrow: 2}}>Shipping Charges 2$</Div>\n                            <Div style={{color: \"#909499\", flexGrow: 2, textAlign: 'right'}}><span\n                                style={{color: \"#000\"}}>US {this.state.pieces * 2}.00$</span> via ups</Div>\n                        </Div>\n                    </Group>\n\n                    <Group title=\"Shipping Address\">\n                        <FormLayout>\n                            <Input top=\"Name\"\n                                   defaultValue={fetchedUser ? fetchedUser.first_name + ' ' + fetchedUser.last_name : ''}/>\n                            <Input type=\"email\" top=\"E-mail\"\n                                   onChange={event => this.setState({email: event.target.value})} onClick={(event) => {\n                                if (!event.target.value) {\n                                    this.fetchContacts('email');\n                                }\n                            }} placeholder=\"you@mail.com\" defaultValue={email}/>\n                            <Input type=\"phone\" top=\"Phone number\"\n                                   onChange={event => this.setState({email: event.target.value})} onClick={(event) => {\n                                if (!event.target.value) {\n                                    this.fetchContacts('phone');\n                                }\n                            }} placeholder=\"+7 (999) 057689\" defaultValue={phone}/>\n\n                            <Input type=\"text\" top=\"Address\"\n                                   onChange={event => this.setState({address: event.target.value})}\n                                   onClick={(event) => {\n                                       if (!event.target.value || event.target.value === baseAddress) {\n                                           this.fetchContacts('address');\n                                       }\n                                   }} placeholder=\"USA, New York, 85 10th Ave\"\n                                   defaultValue={location ? location.display_name : address}/>\n                            <Textarea top=\"Message to seller\"/>\n                            <Button size=\"xl\">Pay</Button>\n                        </FormLayout>\n                    </Group>\n                </Panel>\n            </View>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        location: osmSelectors.getGetGeoLocation(state),\n    };\n}\n\nexport default connect(mapStateToProps)(App);\n","import * as types from './actionTypes';\nimport OSM from '../../services/OSM';\n\nexport function fetchLocation(lat, long) {\n    return async (dispatch, getState) => {\n        try {\n            const location = await OSM.reverseLocation(lat, long);\n            dispatch({type: types.OSM_REVERSE_GEO, location: location});\n        } catch (error) {\n            console.error(error);\n        }\n    };\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport {applyMiddleware, createStore} from 'redux';\nimport {createHashHistory} from 'history';\nimport {Provider} from 'react-redux';\nimport {ConnectedRouter, routerMiddleware} from 'react-router-redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './store/reducers';\nimport App from './App';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n\nconst history = createHashHistory({\n    hashType: 'noslash'\n});\n\n\nconst logger = store => next => action => {\n    console.log('dispatching', action);\n    return next(action);\n};\n\nconst store = createStore(\n    rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    applyMiddleware(thunk, routerMiddleware(history), logger)\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}